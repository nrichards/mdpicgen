# Each line: button rule or separator rule
# Button rule:
#   FORMAT:
#    <RegEx to match buttons, as written in Markdown> = <Shortened name used to build image filenames, or "%digits%">
#    To match only important digits, write regex with them as the first capturing group "(bla)" syntax,
#      excluding unwanted digits judiciously with non-capturing "(?:bla)" syntax.
# Separator rule:
#   FORMAT: __separator__ = "+"
#   One or more.
#   A quoted string.
#   To help break-down a long button sequence.
# Header rule:
#   FORMAT: __header__ = Button
#   Exactly one.
#   An unquoted string.
#   To identify which tables to parse by matching against a table's first column's header text contents.
__header__ = Button
__separator__ = "+"
__separator__ = " or "
__separator__ = " / "
__separator__ = ", then "
^SHIFT$ = s
^[B]?(?:utton)?[ ]?(\d)[ \-a-zA-Z]*(?: \(Long press\))?$ = %digits%
^(?:Press )?[B]?(\[[1-8]-[1-8][, ]*?[,\d]*?\])[ a-zA-Z0-9\(\)\-,\[\].]*$ = %digits%
^(turn)?[ ]?dial[ a-z]*?$ = d
^NO( \(<\))?[ a-z]*$ = n
^OK( \(>\))?[ a-z]*( \([ a-zA-Z]*\))?$ = o
^LOOPER PLAY$ = lplay
^(LOOPER )?REC( \(Long press\))?$ = lr
^LOOPER STOP$ = ls
^MODE PLAY( \(RECALL\))?$ = mplay
^PARAM( \(Long press\))?$ = param
^SYSTEM$ = sys
^SEQ PLAY[ .]*?$ = splay
